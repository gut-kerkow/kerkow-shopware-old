(this.webpackJsonp=this.webpackJsonp||[]).push([["j-e-t-t-mc-newsletter"],{Bt0p:function(e){e.exports=JSON.parse('{"jett-mc-newsletter":{"general":{"mainMenuItemGeneral":"JETT Mailchimp Newsletter"},"module":{"title":"JETT Mailchimp Newsletter","description":"Manage settings for JETT Mailchimp Newsletter"},"settings":{"fields":{"active":{"label":"Active"},"api_key":"API Key","lists":"Lists","sync_limit":{"label":"Sync Limit","tooltip":"Determines how many e-mail addresses should be transferred to Mailchimp with one synchronization run."},"advanced_settings":{"label":"Show advanced settings","sync_date":{"label":"Sync Date","tooltip":"Specifies the date from which newsletter subscribers should be synchronized"},"double_optin":{"label":"Double Opt-In","tooltip":"Determines whether the double optin process should take place via Shopware or Mailchimp"}}},"buttons":{"get_lists":"Get lists","clear_lists":{"label":"Reset","tooltip":"Resets the API key, the selected list and the synchronization date."},"save":"Save"},"titles":{"log":"Log","setup":"Setup","settings":"Settings","advanced_settings":"Advanced Settings"},"tooltips":{"save":"Save settings"},"status":{"saveSuccess":{"title":"Success","message":"The settings have been saved successfully."},"getSuccess":{"title":"Success","message":"The lists were successfully loaded from Mailchimp."}},"log":{"table":{"label":{"createdAt":"Created at","salesChannel":"Sales Channel","status":"Status","message":"Message"}}}}}}')},GUXU:function(e,t,s){var n=s("xNeE");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,s("SZ7m").default)("760b9bd0",n,!0,{})},UihK:function(e){e.exports=JSON.parse('{"jett-mc-newsletter":{"general":{"mainMenuItemGeneral":"JETT Mailchimp Newsletter"},"module":{"title":"JETT Mailchimp Newsletter","description":"Verwalte Einstellungen für JETT Mailchimp Newsletter"},"settings":{"fields":{"active":{"label":"Aktiv"},"api_key":"API Schlüssel","lists":"Listen","sync_limit":{"label":"Synchronisationslimit","tooltip":"Legt fest, wie viele E-Mail Adressen mit einem Synchronisierungslauf zu Mailchimp übertragen werden sollen."},"advanced_settings":{"label":"Erweiterte Einstellungen anzeigen","sync_date":{"label":"Synchronisationsdatum","tooltip":"Legt das Datum fest, ab dem Newsletter Abonnenten synchronisiert werden sollen."},"double_optin":{"label":"Double Opt-In","tooltip":"Legt fest, ob der Double Optin Prozess über Shopware oder über Mailchimp erfolgen soll."}}},"buttons":{"get_lists":"Listen abrufen","clear_lists":{"label":"Zurücksetzen","tooltip":"Setzt den API Key, die ausgewählte Liste und das Synchronisierungsdatum zurück."},"save":"Speichern"},"titles":{"log":"Protokoll","setup":"Einstellungen","settings":"Einstellungen","advanced_settings":"Erweiterte Einstellungen"},"tooltips":{"save":"Einstellungen speichern"},"status":{"saveSuccess":{"title":"Erfolgreich","message":"Die Einstellungen wurden erfolgreich gespeichert."},"getSuccess":{"title":"Erfolgreich","message":"Die Listen wurden erfolgreich von Mailchimp geladen."}},"log":{"table":{"label":{"createdAt":"Erstellt am","salesChannel":"Sales Channel","status":"Status","message":"Nachricht"}}}}}}')},a6Zv:function(e,t){e.exports='{% block jett_newsletter_settings %}\n    <sw-page class="jett-newsletter-settings">\n\n        <template slot="smart-bar-actions">\n            <sw-button-process\n                    class="sw-settings-customer-group-detail__save"\n                    :isLoading="isLoading"\n                    v-model="isSaveSuccessful"\n                    :disabled="isLoading || selectedList < 1"\n                    variant="primary"\n                    v-tooltip.bottom="$tc(\'jett-mc-newsletter.settings.tooltip.save\')"\n                    @click="onSave"\n            >\n                {{ $tc(\'jett-mc-newsletter.settings.buttons.save\') }}\n            </sw-button-process>\n        </template>\n\n        <template slot="content">\n            <sw-card-view>\n                <template class="jett-newsletter-settings__content">\n                    <sw-tabs :isSmall="false" defaultItem="settings">\n                        <template slot-scope="{ active }" >\n                            <sw-tabs-item\n                                name="settings"\n                                :activeTab="active"\n                                :native="true"\n                            >\n                                {{ $tc(\'jett-mc-newsletter.settings.titles.settings\') }}\n                            </sw-tabs-item>\n                            <sw-tabs-item\n                                name="log"\n                                :activeTab="active"\n                                :native="true"\n                                @click="getLogs"\n                            >\n                                {{ $tc(\'jett-mc-newsletter.settings.titles.log\') }}\n                            </sw-tabs-item>\n                        </template>\n\n                        <template slot="content" slot-scope="{ active }">\n                            <sw-card v-if="active === \'settings\'" :isLoading="getListsIsLoading">\n                                <template slot="title">\n                                    <div class="sw-card__title">\n                                        {{ $tc(\'jett-mc-newsletter.settings.titles.setup\') }}\n                                    </div>\n                                </template>\n\n                                <template slot="toolbar">\n                                    <sw-sales-channel-switch\n                                            :label="$tc(\'sw-settings.system-config.labelSalesChannelSelect\')"\n                                            @change-sales-channel-id="onSalesChannelChanged"\n                                    >\n                                    </sw-sales-channel-switch>\n                                </template>\n\n                                <template slot="default">\n                                    <sw-switch-field\n                                            :label="$tc(\'jett-mc-newsletter.settings.fields.active.label\')"\n                                            v-model="isActive">\n                                    </sw-switch-field>\n\n                                    <div style="display: grid; grid-template-columns: 60% 20% 20%; align-items: center; justify-items: center;">\n\n                                        <sw-password-field\n                                                :label="$tc(\'jett-mc-newsletter.settings.fields.api_key\')"\n                                                v-model="apiKey"\n                                                placeholder="API Key"\n                                                type="password"\n                                                :disabled="apiKey && selectedList"\n                                        ></sw-password-field>\n\n                                        <sw-button-process\n                                                @click="getLists"\n                                                :disabled="!apiKey"\n                                                variant="primary"\n                                                size="small"\n                                                :square="false"\n                                                :block="false"\n                                                :isLoading="getListsIsLoading"\n                                                :disabled="apiKey && selectedList"\n                                                style="justify-content: center; align-items: center; display: flex; width: 110px; height: 40px; margin-left: 5%;"\n                                        >\n                                            <sw-icon small name="default-action-circle-download" color="#fff"></sw-icon>\n                                            {{ $tc(\'jett-mc-newsletter.settings.buttons.get_lists\') }}\n                                        </sw-button-process>\n\n                                        <sw-button-process\n                                            @click="clearKeyAndList"\n                                            :disabled="!apiKey"\n                                            :square="false"\n                                            :block="false"\n                                            size="small"\n                                            variant="ghost"\n                                            v-tooltip.top="$tc(\'jett-mc-newsletter.settings.buttons.clear_lists.tooltip\')"\n                                            style="justify-content: center; align-items: center; display: flex; width: 110px; height: 40px; margin-left: 5%;"\n                                        >\n                                            <sw-icon small name="text-editor-undo" color="#189eff"></sw-icon>\n                                            {{ $tc(\'jett-mc-newsletter.settings.buttons.clear_lists.label\') }}\n                                        </sw-button-process>\n                                    </div>\n\n                                    <sw-select-field\n                                            v-if="lists.total > 0 || selectedList"\n                                            :placeholder="$tc(\'jett-mc-newsletter.settings.fields.lists\')"\n                                            :label="$tc(\'jett-mc-newsletter.settings.fields.lists\')"\n                                            v-model="selectedList"\n                                            :disabled="apiKey && selectedList"\n                                    >\n                                        <option v-for="list in lists.items"\n                                                :key="list.id"\n                                                :value="list.id">\n                                            {{ list.name }}\n                                        </option>\n                                    </sw-select-field>\n\n                                    <sw-switch-field\n                                        :label="$tc(\'jett-mc-newsletter.settings.fields.advanced_settings.label\')"\n                                        v-model="showAdvancedSettings"\n                                    >\n                                    </sw-switch-field>\n\n                                    <sw-card\n                                        v-if="showAdvancedSettings"\n                                        :title="$tc(\'jett-mc-newsletter.settings.titles.advanced_settings\')"\n                                    >\n                                        <template slot="toolbar">\n                                            {{ $tc(\'jett-mc-newsletter.settings.titles.advanced_settings\') }}\n                                        </template>\n                                        <template slot="default">\n                                            <sw-number-field\n                                                :label="$tc(\'jett-mc-newsletter.settings.fields.sync_limit.label\')"\n                                                :helpText="$tc(\'jett-mc-newsletter.settings.fields.sync_limit.tooltip\')"\n                                                numberType="int"\n                                                :step="10"\n                                                v-model="syncLimit"\n                                                :digits="2"\n                                            >\n                                            </sw-number-field>\n\n                                            <sw-datepicker\n                                                :label="$tc(\'jett-mc-newsletter.settings.fields.advanced_settings.sync_date.label\')"\n                                                dateType="datetime-local"\n                                                v-model="lastSyncRun"\n                                                :helpText="$tc(\'jett-mc-newsletter.settings.fields.advanced_settings.sync_date.tooltip\')"\n                                            >\n                                            </sw-datepicker>\n                                        </template>\n                                    </sw-card>\n                                </template>\n                            </sw-card>\n                            <sw-card\n                                v-if="active === \'log\'"\n                                :isLoading="getLogsIsLoading"\n                            >\n                                <template slot="title">\n                                    <div class="sw-card__title">\n                                        {{ $tc(\'jett-mc-newsletter.settings.titles.log\') }}\n                                    </div>\n                                </template>\n\n                                <template slot="toolbar">\n                                    <sw-sales-channel-switch\n                                        :label="$tc(\'sw-settings.system-config.labelSalesChannelSelect\')"\n                                        @change-sales-channel-id="onSalesChannelChanged">\n                                    </sw-sales-channel-switch>\n                                </template>\n                                <template slot="default">\n                                    <sw-data-grid\n                                        :showSelection="false"\n                                        :dataSource="logs"\n                                        :showActions="false"\n                                        :columns="[\n                                             { property: \'createdAt\', label: $tc(\'jett-mc-newsletter.settings.log.table.label.createdAt\'), rawData: true },\n                                             { property: \'salesChannelId\', label: $tc(\'jett-mc-newsletter.settings.log.table.label.salesChannel\'), rawData: true },\n                                             { property: \'status\', label: $tc(\'jett-mc-newsletter.settings.log.table.label.status\'), rawData: true },\n                                             { property: \'message\', label: $tc(\'jett-mc-newsletter.settings.log.table.label.message\'), rawData: true },\n                                        ]">\n                                        <template #column-createdAt="{ item }">\n                                            {{ item.createdAt | date({hour: \'numeric\', minute: \'numeric\', second: \'numeric\'})\n                                            }}\n                                        </template>\n                                        <template #column-salesChannelId="{ item }">\n                                            <span v-if="item.payload && item.payload.salesChannel">{{ item.payload.salesChannel }}</span>\n                                            <span v-else>{{ item.salesChannelId }}</span>\n                                        </template>\n                                        <template #column-status="{ item }">\n                                            <sw-icon v-if="item.status"\n                                                     name="small-default-checkmark-circle"\n                                                     size="16"\n                                                     color="#1abc9c"\n                                            >\n                                            </sw-icon>\n                                            <sw-icon v-if="!item.status"\n                                                     name="small-default-x-circle"\n                                                     size="16"\n                                                     color="#fc427b"\n                                            >\n                                            </sw-icon>\n                                        </template>\n                                        <template #column-message="{ item }">\n                                            <span>{{ item.message }}</span>\n                                            <sw-help-text\n                                                class="jett-newsletter-log__payload"\n                                                :text="(item.payload.email ? item.payload.email : item.payload.message)"\n                                            ></sw-help-text>\n                                        </template>\n                                        <template slot="pagination">\n                                            <sw-pagination\n                                                :total="logsTotal"\n                                                :limit="logsLimit"\n                                                :page="logsPage"\n                                                @page-change="onLogPageChange"\n                                                :autoHide="false"\n                                                :steps="[25]"\n                                                :total-visible="25"\n                                            ></sw-pagination>\n                                        </template>\n                                    </sw-data-grid>\n                                </template>\n                            </sw-card>\n                        </template>\n                    </sw-tabs>\n                </template>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}\n'},kvmX:function(e,t,s){"use strict";s.r(t);var n=s("UihK"),i=s("Bt0p");s("GUXU");Shopware.Module.register("jett-newsletter",{type:"plugin",name:"jett-mc-newsletter.module.title",title:"jett-mc-newsletter.module.title",description:"jett-mc-newsletter.module.description",color:"#ff3d58",icon:"default-shopping-paper-bag-product",snippets:{"de-DE":n,"en-GB":i},routes:{settings:{component:"jett-newsletter-settings",path:"settings"}},navigation:[{label:"jett-mc-newsletter.general.mainMenuItemGeneral",color:"#ff3d58",path:"jett.newsletter.settings",icon:"default-shopping-paper-bag-product",parent:"sw-marketing"}]});var a=s("a6Zv"),l=s.n(a),o=Shopware.Mixin;function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function g(e,t){for(var s=0;s<t.length;s++){var n=t[s];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var s,n=m(e);if(t){var i=m(this).constructor;s=Reflect.construct(n,arguments,i)}else s=n.apply(this,arguments);return u(this,s)}}function u(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Shopware.Component.register("jett-newsletter-settings",{template:l.a,inject:["JettMcApiService"],mixins:[o.getByName("notification")],data:function(){return{getListsIsLoading:!1,apiKey:null,isLoading:!1,isSaveSuccessful:!1,syncLimit:30,salesChannelId:null,isActive:!1,lists:[],selectedList:null,settingId:null,lastSyncRun:null,getLogsIsLoading:!1,logs:[],logsTotal:0,logsPage:1,logsLimit:25,showAdvancedSettings:!1,doubleOptinValues:[{id:0,label:"Shopware"},{id:1,label:"Mailchimp"}],selectedDoubleOptinOption:0}},mounted:function(){this.getSettings()},methods:{onSalesChannelChanged:function(e){this.salesChannelId=e,this.getSettings(),this.getLogs()},onLogPageChange:function(e){this.logsPage=e.page,this.getLogs()},getSettings:function(){var e=this;this.JettMcApiService.getSettings({salesChannelId:this.salesChannelId}).then((function(t){t.apiKey&&(e.apiKey=t.apiKey),t.listId&&(e.selectedList=t.listId),t.id&&(e.settingId=t.id),t.syncLimit&&(e.syncLimit=t.syncLimit),t.salesChannelId&&(e.salesChannelId=t.salesChannelId),t.active&&(e.isActive=t.active),t.lastSyncRun&&(e.lastSyncRun=t.lastSyncRun),t.doiOption&&(e.selectedDoubleOptinOption=t.doiOption),e.selectedList&&e.getLists()})).catch((function(t){e.showErrorMessage(t)})).finally((function(){}))},getLogs:function(){var e=this;this.getLogsIsLoading=!0,this.JettMcApiService.getLogs({salesChannelId:this.salesChannelId,page:this.logsPage,limit:this.logsLimit}).then((function(t){e.logs=Object.values(t.elements),e.logs.map((function(e){e.payload=JSON.parse(e.payload)})),e.logsTotal=t.total})).catch((function(t){e.showErrorMessage(t)})).finally((function(){e.getLogsIsLoading=!1}))},onSave:function(){var e=this;this.isLoading=!0,this.JettMcApiService.save({settingId:this.settingId,salesChannelId:this.salesChannelId,active:this.isActive,apiKey:this.apiKey,listId:this.selectedList,syncLimit:this.syncLimit,lastSyncRun:this.lastSyncRun,doiOption:this.selectedDoubleOptinOption}).then((function(){e.createNotificationSuccess({title:e.$tc("jett-mc-newsletter.settings.status.saveSuccess.title"),message:e.$tc("jett-mc-newsletter.settings.status.saveSuccess.message")})})).catch((function(t){e.showErrorMessage(t)})).finally((function(){e.isLoading=!1}))},getLists:function(){var e=this;this.getListsIsLoading=!0,this.JettMcApiService.getLists({apiKey:this.apiKey}).then((function(t){e.lists=t,e.createNotificationSuccess({title:e.$tc("jett-mc-newsletter.settings.status.getSuccess.title"),message:e.$tc("jett-mc-newsletter.settings.status.getSuccess.message")})})).catch((function(t){e.showErrorMessage(t)})).finally((function(){e.getListsIsLoading=!1}))},getList:function(){var e=this;this.getListsIsLoading=!0,this.JettMcApiService.getList({apiKey:this.apiKey,listId:this.selectedList}).then((function(t){e.lists=t,e.createNotificationSuccess({title:e.$tc("jett-mc-newsletter.settings.status.getSuccess.title"),message:e.$tc("jett-mc-newsletter.settings.status.getSuccess.message")})})).catch((function(t){e.showErrorMessage(t)})).finally((function(){e.getListsIsLoading=!1}))},clearKeyAndList:function(){this.apiKey=null,this.selectedList=null,this.lastSyncRun=null},showErrorMessage:function(e){var t=e.response.data.message?e.response.data.message:e.message;this.createNotificationError({title:e.title,message:t,autoClose:!1})}}});var h=Shopware.Classes.ApiService,f=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(a,e);var t,s,n,i=p(a);function a(e,t){var s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"jettmcnewsletter";return r(this,a),i.call(this,e,t,s)}return t=a,(s=[{key:"getLists",value:function(e){var t="".concat(this.getApiBasePath(),"/get-lists");return this.httpClient.post(t,{params:e},{headers:this.getBasicHeaders()}).then((function(e){return h.handleResponse(e)}))}},{key:"getList",value:function(e){var t="".concat(this.getApiBasePath(),"/get-list");return this.httpClient.post(t,{params:e},{headers:this.getBasicHeaders()}).then((function(e){return h.handleResponse(e)}))}},{key:"getLogs",value:function(e){var t="".concat(this.getApiBasePath(),"/get-logs");return this.httpClient.get(t,{params:e,headers:this.getBasicHeaders()}).then((function(e){return h.handleResponse(e)}))}},{key:"save",value:function(e){var t="".concat(this.getApiBasePath(),"/save-setting");return this.httpClient.post(t,{params:e},{headers:this.getBasicHeaders()}).then((function(e){return h.handleResponse(e)}))}},{key:"getSettings",value:function(e){var t="".concat(this.getApiBasePath(),"/get-settings");return this.httpClient.get(t,{params:e,headers:this.getBasicHeaders()}).then((function(e){return h.handleResponse(e)}))}}])&&g(t.prototype,s),n&&g(t,n),a}(h),w=Shopware.Application;w.addServiceProvider("JettMcApiService",(function(e){var t=w.getContainer("init");return new f(t.httpClient,e.loginService)}))},xNeE:function(e,t,s){}},[["kvmX","runtime","vendors-node"]]]);